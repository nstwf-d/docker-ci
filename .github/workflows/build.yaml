name: Reusable Docker Build Workflow

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      docker_image_path:
        required: true
        type: string
      image_version_prefix:
        required: false
        type: string
        default: ''
      extra_build_args:
        required: false
        type: string
        default: ''
    secrets:
      docker_username:
        required: true
      docker_build_token:
        required: true

jobs:
  docker-login:
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_build_token }}

  docker-build-push:
    needs: docker-login
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.docker_image_path }}
            ${{ inputs.ghcr_image_path }}
          tags: |
            type=raw,value=${{ inputs.image_version_prefix }}${{ inputs.version }}_pr${{ github.event.pull_request.number }}_${{ github.head_ref }}
            type=raw,value=${{ inputs.image_version_prefix }}${{ inputs.version }}_pr${{ github.event.pull_request.number }}_${{ github.sha }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          build-args: |
            version=${{ inputs.version }}
            ${{ inputs.extra_build_args }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Add PR Comment with Image Tag
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🐳 Built Docker image:
            ```bash
            ${{ steps.meta.outputs.tags }}
            ```